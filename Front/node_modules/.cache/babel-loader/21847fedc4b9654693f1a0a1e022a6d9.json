{"ast":null,"code":"var _jsxFileName = \"/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/main/Main.jsx\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport FormMail from \"../admin/FormMail\";\nimport StoreSearchResult from \"../store/StoreSearchResult\"; // user 1 로그인 했다고 가정하기\n\nconst user1 = \"1\"; // const useStyles = makeStyles(theme => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//   },\n//   selectEmpty: {\n//     marginTop: theme.spacing(2),\n//   },\n// }));\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      this.setState({\n        isModalOpen: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isModalOpen: false\n      });\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.search = async () => {\n      //if (this.state.storeName !== null && this.state.cuisine !== null) {\n      //   let storeName = this.state.storeName;\n      //   let cuisine = this.state.cuisine;\n      //   // let params = new FormData();\n      //   // params.append(\"storeName\", \"스\");\n      //   // params.append(\"cuisine\", cuisine);\n      //   await axios({\n      //     method: \"get\",\n      //     url: `searchBothOfThem/${storeName}/${cuisine}`,\n      //     // data: params\n      //   })\n      //     .then(success => {\n      //       const data = success.data;\n      //       console.log(\"음식점 이름 & 음식종류로 검색 성공 크크.. \" + data);\n      //       this.setState({\n      //         list: data,\n      //         storeName: \"\",\n      //         cuisine: \"\",\n      //         showSearchResult: true\n      //       });\n      //     })\n      //     .catch(error => console.log(\"에러...\" + error));\n      // } else if \n      // (this.state.cuisine === null) {\n      const storeName = this.state.storeName;\n      await axios({\n        method: \"get\",\n        url: `searchByName/${storeName}`\n      }).then(success => {\n        const data = success.data;\n        console.log(\"음식점 이름으로 검색 성공 \" + data);\n        this.setState({\n          list: data,\n          storeName: \"\",\n          showSearchResult: true\n        });\n        console.log(this.state.showSearchResult);\n      }).catch(error => console.log(\"에러..흑흑.. => \" + error)); // } else if (this.state.storeName === null) {\n      //   const cuisine = this.state.cuisine;\n      //   await axios({\n      //     method: \"get\",\n      //     url: `searchByCuisine/${cuisine}`\n      //   }).then(success => {\n      //     const data = success.data;\n      //     console.log(\"음식 종류로 검색 성공 \" + data);\n      //     this.setState({\n      //       list: data,\n      //       storeName: \"\",\n      //       showSearchResult: true\n      //     }).catch(error => console.log(\"에러..흑흑.. => \" + error));\n      //   });\n      // }\n    };\n\n    this.state = {\n      isModalOpen: false,\n      showSearchResult: false,\n      storeName: \"\",\n      cuisine: \"\",\n      list: []\n    };\n  } // component load 되면 로그인 했다고 가정하고 session에 user 1의 userNo 넣기\n\n\n  componentDidMount() {\n    window.sessionStorage.setItem(\"userNo\", user1); // window.sessionStorage.clear();\n  }\n\n  render() {\n    // const classes = useStyles();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\uBA54\\uC778\\uD398\\uC774\\uC9C0\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      type: \"text\",\n      id: \"outlined-basic\",\n      margin: \"normal\",\n      label: \"Search\",\n      variant: \"outlined\",\n      placeholder: \"\\uC5B4\\uB290 \\uC74C\\uC2DD\\uC810\\uC5D0\\uC11C\",\n      name: \"storeName\",\n      onChange: this.onChange,\n      value: this.state.storeName,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })))), this.state.showSearchResult && React.createElement(StoreSearchResult, {\n      data: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), \"\", React.createElement(Button, {\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Email Us\"), this.state.isModalOpen && React.createElement(FormMail, {\n      onClose: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), \" \", \"\");\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/main/Main.jsx"],"names":["Button","makeStyles","FormControl","Select","MenuItem","TextField","SearchIcon","axios","React","FormMail","StoreSearchResult","user1","Main","Component","constructor","props","openModal","setState","isModalOpen","closeModal","onChange","e","target","name","value","search","storeName","state","method","url","then","success","data","console","log","list","showSearchResult","catch","error","cuisine","componentDidMount","window","sessionStorage","setItem","render"],"mappings":"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","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport FormMail from \"../admin/FormMail\";\nimport StoreSearchResult from \"../store/StoreSearchResult\";\n\n\n// user 1 로그인 했다고 가정하기\nconst user1 = \"1\";\n\n// const useStyles = makeStyles(theme => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//   },\n//   selectEmpty: {\n//     marginTop: theme.spacing(2),\n//   },\n// }));\n\n\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      showSearchResult: false,\n      storeName: \"\",\n      cuisine: \"\",\n      list: []\n    };\n  }\n\n  // component load 되면 로그인 했다고 가정하고 session에 user 1의 userNo 넣기\n  componentDidMount () {\n    window.sessionStorage.setItem(\"userNo\", user1)\n    // window.sessionStorage.clear();\n  }\n\n\n  openModal = () => {\n    this.setState({\n      isModalOpen: true\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isModalOpen: false\n    });\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  search = async () => {\n     //if (this.state.storeName !== null && this.state.cuisine !== null) {\n    //   let storeName = this.state.storeName;\n    //   let cuisine = this.state.cuisine;\n\n    //   // let params = new FormData();\n    //   // params.append(\"storeName\", \"스\");\n    //   // params.append(\"cuisine\", cuisine);\n\n    //   await axios({\n    //     method: \"get\",\n    //     url: `searchBothOfThem/${storeName}/${cuisine}`,\n    //     // data: params\n    //   })\n    //     .then(success => {\n    //       const data = success.data;\n    //       console.log(\"음식점 이름 & 음식종류로 검색 성공 크크.. \" + data);\n    //       this.setState({\n    //         list: data,\n    //         storeName: \"\",\n    //         cuisine: \"\",\n    //         showSearchResult: true\n    //       });\n    //     })\n    //     .catch(error => console.log(\"에러...\" + error));\n    // } else if \n    // (this.state.cuisine === null) {\n      const storeName = this.state.storeName;\n      await axios({\n        method: \"get\",\n        url: `searchByName/${storeName}`\n      }).then(success => {\n        const data = success.data;\n        console.log(\"음식점 이름으로 검색 성공 \" + data);\n        this.setState({\n          list: data,\n          storeName: \"\",\n          showSearchResult: true\n        });\n        console.log(this.state.showSearchResult)\n      }).catch(error => console.log(\"에러..흑흑.. => \" + error));\n    // } else if (this.state.storeName === null) {\n    //   const cuisine = this.state.cuisine;\n    //   await axios({\n    //     method: \"get\",\n    //     url: `searchByCuisine/${cuisine}`\n    //   }).then(success => {\n    //     const data = success.data;\n    //     console.log(\"음식 종류로 검색 성공 \" + data);\n    //     this.setState({\n    //       list: data,\n    //       storeName: \"\",\n    //       showSearchResult: true\n    //     }).catch(error => console.log(\"에러..흑흑.. => \" + error));\n    //   });\n    // }\n  };\n\n  render() {\n    // const classes = useStyles();\n    return (\n      <div>\n        <h4>메인페이지</h4>\n        <div>\n          {/* 검색 */}\n          <form  noValidate autoComplete=\"on\">\n            <TextField\n              type=\"text\"\n              id=\"outlined-basic\"\n              margin=\"normal\"\n              label=\"Search\"\n              variant=\"outlined\"\n              placeholder=\"어느 음식점에서\"\n              name=\"storeName\"\n              onChange={this.onChange}\n              value={this.state.storeName}\n              defaultValue=\"\"\n            />\n            {/* <FormControl >\n              <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n                id=\"demo-simple-select-autowidth\"\n                placeholder=\"어떤 음식을 드실건가요\"\n                name=\"cuisine\"\n                value={this.state.cuisine}\n                onChange={this.onChange}\n                defaultValue = \"\"\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n               <MenuItem value=\"51\">한식</MenuItem>\n               <MenuItem value=\"52\">양식</MenuItem>\n               <MenuItem value=\"53\">중식</MenuItem>\n               <MenuItem value=\"54\">일식</MenuItem>\n               <MenuItem value=\"55\">동남아식</MenuItem>\n                <MenuItem value=\"56\">뷔페식</MenuItem>         \n                </Select>\n            </FormControl> */}\n            <Button variant=\"contained\" color=\"primary\" onClick={this.search}>\n              <SearchIcon />\n            </Button>\n          </form>\n        </div>\n        {this.state.showSearchResult && (\n          <StoreSearchResult data={this.state.list} />\n        )}{\"\"}\n\n        {/* 폼메일 보내기 */}\n        <Button onClick={this.openModal}>Email Us</Button>\n        {this.state.isModalOpen && <FormMail onClose={this.closeModal} />} {\"\"}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}