{"ast":null,"code":"var _jsxFileName = \"/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/App.js\";\nimport Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"./App.css\";\nimport Storage from \"./component/login/Storage\";\nimport NavBar from \"./component/Navbar.jsx\";\nimport AppRouter from \"./component/RouterComponent\"; //Router에 대한 3개의 route 지정하는 곳\n// -> 나는 index 이런거로 빼서 해야징\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = () => {\n      this.setState({\n        logged: true\n      });\n    };\n\n    this.onLogout = () => {\n      this.setState({\n        logged: false\n      });\n      const provider = window.sessionStorage.getItem('provider');\n\n      if (provider === 'Google') {\n        console.log('provider =>', provider);\n        const auth2 = window.gapi.auth2.getAuthInstance();\n        console.log('auth2', auth2);\n        auth2.signOut().then(() => {\n          console.log('Google Logout Success');\n        });\n      } else if (provider === 'Kakao') {\n        window.Kakao.Auth.logout(() => {\n          console.log('Kakao Logout Success');\n        });\n      }\n\n      window.sessionStorage.clear();\n    };\n\n    this.state = {\n      logged: false,\n      onLogin: this.onLogin,\n      onLogout: this.onLogout\n    };\n  }\n\n  componentDidMount() {\n    const id = window.sessionStorage.getItem('id');\n\n    if (id) {\n      this.onLogin();\n    } else {\n      this.onLogout();\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          logged = _this$state.logged,\n          onLogout = _this$state.onLogout;\n    return React.createElement(Storage.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      logged: logged,\n      onLogout: onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(AppRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/App.js"],"names":["Container","React","BrowserRouter","Router","Storage","NavBar","AppRouter","App","Component","constructor","props","onLogin","setState","logged","onLogout","provider","window","sessionStorage","getItem","console","log","auth2","gapi","getAuthInstance","signOut","then","Kakao","Auth","logout","clear","state","componentDidMount","id","render"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CAEA;AACA;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,OATkB,GASR,MAAM;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KAbiB;;AAAA,SAelBC,QAfkB,GAeP,MAAM;AACf,WAAKF,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAIA,YAAME,QAAQ,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,CAAjB;;AAEA,UAAGH,QAAQ,KAAK,QAAhB,EAAyB;AACvBI,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,QAA3B;AACA,cAAMM,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAYD,KAAZ,CAAkBE,eAAlB,EAAd;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACAA,QAAAA,KAAK,CAACG,OAAN,GAAgBC,IAAhB,CAAqB,MAAI;AACvBN,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,SAFD;AAGD,OAPD,MAOM,IAAGL,QAAQ,KAAK,OAAhB,EAAwB;AAC5BC,QAAAA,MAAM,CAACU,KAAP,CAAaC,IAAb,CAAkBC,MAAlB,CAAyB,MAAI;AAC3BT,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,SAFD;AAGD;;AACDJ,MAAAA,MAAM,CAACC,cAAP,CAAsBY,KAAtB;AACD,KAnCiB;;AAEhB,SAAKC,KAAL,GAAa;AACXjB,MAAAA,MAAM,EAAE,KADG;AAEXF,MAAAA,OAAO,EAAE,KAAKA,OAFH;AAGXG,MAAAA,QAAQ,EAAE,KAAKA;AAHJ,KAAb;AAKD;;AA8BDiB,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,EAAE,GAAGhB,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,IAA9B,CAAX;;AACA,QAAGc,EAAH,EAAM;AACJ,WAAKrB,OAAL;AACD,KAFD,MAEO;AACL,WAAKG,QAAL;AACD;AACF;;AAGDmB,EAAAA,MAAM,GAAI;AAAA,wBACqB,KAAKH,KAD1B;AAAA,UACAjB,MADA,eACAA,MADA;AAAA,UACQC,QADR,eACQA,QADR;AAGV,WACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKgB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEjB,MAAhB;AAAwB,MAAA,QAAQ,EAAEC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADA,CADF,CADF;AAYC;;AAhE+B;;AAmElC,eAAeP,GAAf","sourcesContent":["import Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"./App.css\";\nimport Storage from \"./component/login/Storage\";\nimport NavBar from \"./component/Navbar.jsx\";\nimport AppRouter from \"./component/RouterComponent\";\n\n//Router에 대한 3개의 route 지정하는 곳\n// -> 나는 index 이런거로 빼서 해야징\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      logged: false,\n      onLogin: this.onLogin,\n      onLogout: this.onLogout\n    }\n  }\n\n  onLogin = () => {\n    this.setState({\n      logged: true\n    });\n  }\n\n  onLogout = () => {\n    this.setState({\n      logged: false\n    });\n\n    const provider = window.sessionStorage.getItem('provider');\n\n    if(provider === 'Google'){\n      console.log('provider =>', provider);\n      const auth2 = window.gapi.auth2.getAuthInstance();\n      console.log('auth2', auth2);\n      auth2.signOut().then(()=>{\n        console.log('Google Logout Success');\n      });\n    }else if(provider === 'Kakao'){\n      window.Kakao.Auth.logout(()=>{\n        console.log('Kakao Logout Success');\n      });\n    }\n    window.sessionStorage.clear();\n  }\n\n  componentDidMount(){\n    const id = window.sessionStorage.getItem('id');\n    if(id){\n      this.onLogin();\n    } else {\n      this.onLogout();\n    }\n  }\n\n\n  render () {\n    const { logged, onLogout } = this.state;\n\n  return (\n    <Storage.Provider value={this.state}>\n      <div>\n      <Router>\n        <NavBar logged={logged} onLogout={onLogout}/>\n        <Container>\n          <AppRouter />\n        </Container>\n      </Router>\n      </div>\n      </Storage.Provider>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}