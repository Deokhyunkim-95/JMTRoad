{"ast":null,"code":"var _jsxFileName = \"/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/chat/aside/Aside.jsx\";\nimport React, { Component } from 'react';\nimport './Aside.scss';\nimport userImage from '../../../userImage.png';\nimport TextField from '@material-ui/core/TextField';\nimport PrivateMessageBoxx from '../PrivateMessageBox/PrivateMessageBox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nexport default class Aside extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClosePrivateBox = () => {\n      this.setState({\n        openPrivateBox: false\n      });\n    };\n\n    this.handleOpenPrivateBox = e => {\n      let otherUser = e.currentTarget.dataset.value;\n      this.setState({\n        openPrivateBox: true,\n        otherUser: otherUser\n      });\n    };\n\n    this.handleSearch = e => {\n      let currentList = [];\n      let newList = [];\n\n      if (e.target.value !== \"\") {\n        currentList = this.props.roomNotification;\n        newList = currentList.filter(notification => {\n          const lc = notification.sender.split('~')[0].toLowerCase();\n          const filter = e.target.value.toLowerCase();\n          return lc.includes(filter);\n        });\n      } else {\n        newList = this.props.roomNotification;\n      }\n\n      this.setState({\n        roomNotification: newList\n      });\n    };\n\n    this.state = {\n      openPrivateBox: false,\n      roomNotification: this.props.roomNotification,\n      yousername: this.props.username,\n      otherUser: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"search full-width\",\n      label: \"Search members\",\n      type: \"search\",\n      onChange: this.handleSearch,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.roomNotification.map((notification, i) => this.state.yousername.toLowerCase().trim() === notification.sender.split('~')[0].toLowerCase().trim() ? \"\" : React.createElement(\"li\", {\n      key: i,\n      onClick: this.handleOpenPrivateBox,\n      \"data-value\": notification.sender.split('~')[0].toLowerCase().trim(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      key: i,\n      role: undefined,\n      dense: true,\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"User Image\",\n      src: userImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: notification.sender.split('~')[0],\n      secondary: notification.status === 'online' || notification.status === 'typing...' ? React.createElement(\"span\", {\n        className: \"status green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        className: \"status orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Send private message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Private Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(CommentIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), \" \")), this.state.openPrivateBox ? React.createElement(PrivateMessageBoxx, {\n      open: this.state.openPrivateBox,\n      handleClose: this.handleClosePrivateBox,\n      notifications: this.props.roomNotification,\n      youser: this.state.yousername,\n      otherUser: this.state.otherUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : \"\");\n  }\n\n}","map":{"version":3,"sources":["/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/chat/aside/Aside.jsx"],"names":["React","Component","userImage","TextField","PrivateMessageBoxx","List","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Divider","IconButton","CommentIcon","Avatar","Tooltip","Aside","constructor","props","handleClosePrivateBox","setState","openPrivateBox","handleOpenPrivateBox","e","otherUser","currentTarget","dataset","value","handleSearch","currentList","newList","target","roomNotification","filter","notification","lc","sender","split","toLowerCase","includes","state","yousername","username","render","map","i","trim","undefined","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Aside.scss'\nimport userImage from '../../../userImage.png';\nimport TextField from '@material-ui/core/TextField';\nimport PrivateMessageBoxx from '../PrivateMessageBox/PrivateMessageBox'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default class Aside extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                openPrivateBox: false,\n                roomNotification: this.props.roomNotification,\n                yousername: this.props.username,\n                otherUser: ''\n\n            };\n    }\n\n    handleClosePrivateBox = () => {\n        this.setState({\n            openPrivateBox: false\n        })\n    }\n\n    handleOpenPrivateBox = (e) => {\n        let otherUser = e.currentTarget.dataset.value;\n\n        this.setState({\n            openPrivateBox: true,\n            otherUser: otherUser\n        })\n    }\n\n    handleSearch = (e) => {\n\n        let currentList = [];\n\n        let newList = [];\n\n        if (e.target.value !== \"\") {\n\n            currentList = this.props.roomNotification;\n\n            newList = currentList.filter(notification => {\n\n                const lc = notification.sender.split('~')[0].toLowerCase();\n\n                const filter = e.target.value.toLowerCase();\n                return lc.includes(filter);\n            });\n        } else {\n            newList = this.props.roomNotification;\n        }\n\n        this.setState({\n            roomNotification: newList\n        });\n    }\n\n    render() {\n        return (\n            <aside>\n                {/* <div className=\"vr\"></div> */}\n                <TextField\n                    id=\"search full-width\"\n                    label=\"Search members\"\n                    type=\"search\"\n                    onChange={this.handleSearch}\n                    margin=\"normal\"\n                />\n                <ul >\n                    <List component=\"nav\">\n                        {this.state.roomNotification.map((notification, i) =>\n                            this.state.yousername.toLowerCase().trim() === notification.sender.split('~')[0].toLowerCase().trim()\n                                ? \"\"\n                                : <li key={i} onClick={this.handleOpenPrivateBox} data-value={notification.sender.split('~')[0].toLowerCase().trim()}>\n                                    <div>\n                                        <div>\n                                            <ListItem\n                                                key={i}\n                                                role={undefined}\n                                                dense\n                                                button >\n                                                <Avatar alt=\"User Image\" src={userImage} />\n                                               \n                                                <ListItemText primary={notification.sender.split('~')[0]}\n                                                    secondary={notification.status === 'online' ||\n                                                        notification.status === 'typing...' ?\n                                                        <span className=\"status green\"></span> : <span className=\"status orange\"></span>} />\n                                                <ListItemSecondaryAction>\n                                                <Tooltip title=\"Send private message\">\n                                                    <IconButton aria-label=\"Private Message\">\n                                                        <CommentIcon />\n                                                    </IconButton>\n                                                    </Tooltip>\n                                                </ListItemSecondaryAction>\n                                            </ListItem>\n                                        </div>\n                                        <br />\n\n                                    </div>\n                                </li>\n                        )} </List></ul>\n\n                {this.state.openPrivateBox ?\n                    <PrivateMessageBoxx open={this.state.openPrivateBox} handleClose={this.handleClosePrivateBox}\n                        notifications={this.props.roomNotification} youser={this.state.yousername} otherUser={this.state.otherUser} />\n                    : \"\"}\n\n            </aside>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}