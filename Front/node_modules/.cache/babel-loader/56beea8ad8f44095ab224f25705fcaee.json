{"ast":null,"code":"var _jsxFileName = \"/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/chat/menu-app-bar/MenuAppBar.jsx\";\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport './MenuAppBar.scss';\nimport Badge from '@material-ui/core/Badge';\nimport Notifications from '../../../NotificationsComponent';\nimport BellIcon from 'react-bell-icon';\nimport msgImage from '../../../msgImage.png';\nvar stompClient = null;\nexport default class MenuAppBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.connect = () => {\n      if (this.props.username) {\n        const Stomp = require('stompjs');\n\n        var SockJS = require('sockjs-client');\n\n        SockJS = new SockJS('/ws');\n        stompClient = Stomp.over(SockJS);\n        stompClient.connect({}, this.onConnected, this.onError);\n        this.setState({\n          username: this.props.username\n        });\n      }\n    };\n\n    this.onConnected = () => {\n      // Subscribing to the private topic\n      stompClient.subscribe('/user/' + this.props.username.toString().toLowerCase() + '/reply', this.onMessageReceived); // Registering user to server as a private chat user\n\n      stompClient.send('/app/addPrivateUser', {}, JSON.stringify({\n        sender: this.props.username,\n        type: 'JOIN'\n      }));\n    };\n\n    this.sendMessage = (type, value) => {\n      this.setState({\n        bellRing: true\n      });\n\n      if (stompClient) {\n        var chatMessage = {\n          sender: this.props.user,\n          content: type === 'TYPING' ? value : value,\n          type: type\n        }; // send private message\n\n        stompClient.send('/app/sendPrivateMessage', {}, JSON.stringify(chatMessage));\n      }\n    };\n\n    this.onMessageReceived = payload => {\n      var message = JSON.parse(payload.body);\n\n      if (message.type === 'CHAT') {\n        this.state.privateMessages.push({\n          message: message.content,\n          sender: message.sender,\n          dateTime: message.dateTime\n        });\n        this.setState({\n          privateMessages: this.state.privateMessages\n        });\n      }\n    };\n\n    this.handleOpenNotifications = () => {\n      this.setState({\n        openNotifications: true,\n        isPrivateMessage: false\n      });\n    };\n\n    this.handleOpenPrivateMessages = () => {\n      this.setState({\n        openNotifications: true,\n        isPrivateMessage: true\n      });\n    };\n\n    this.handleCloseNotifications = () => {\n      this.setState({\n        openNotifications: false\n      });\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleLogOut = () => {\n      window.location.reload();\n    };\n\n    this.state = {\n      openNotifications: false,\n      anchorEl: null,\n      privateMessages: [],\n      isPrivateMessage: false\n    };\n    this.connect();\n  }\n\n  render() {\n    const _this$state = this.state,\n          auth = _this$state.auth,\n          anchorEl = _this$state.anchorEl;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"static\",\n      style: {\n        background: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"\",\n      color: \"inherit\",\n      \"aria-label\": \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"title\",\n      color: \"inherit\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.props.username, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" \"), \" \", React.createElement(\"span\", {\n      className: \"status green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), auth && React.createElement(IconButton, {\n      \"aria-owns\": open ? 'menu-appbar' : null,\n      \"aria-haspopup\": \"true\",\n      onClick: this.handleMenu,\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(AccountCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      className: \"badge\",\n      badgeContent: this.props.roomNotification.length,\n      color: \"secondary\",\n      onClick: this.handleOpenNotifications,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", React.createElement(BellIcon, {\n      active: this.props.bellRing,\n      animate: this.props.bellRing,\n      color: \"white\",\n      width: \"25px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))), React.createElement(Badge, {\n      className: \"badgeMessage\",\n      badgeContent: this.state.privateMessages != null ? this.state.privateMessages.length : 0,\n      color: \"secondary\",\n      onClick: this.handleOpenPrivateMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: msgImage,\n      alt: \"Private messages\",\n      className: \"avatar\",\n      style: {\n        width: '48px',\n        height: '46px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))), React.createElement(Notifications, {\n      open: this.state.openNotifications,\n      handleClose: this.handleCloseNotifications,\n      notifications: this.props.roomNotification,\n      roomMessages: this.props.broadcastMessage,\n      privateMessages: this.state.privateMessages,\n      isPrivateMessage: this.state.isPrivateMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"My account\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Broadcast \"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Starred \"), React.createElement(MenuItem, {\n      onClick: this.handleLogOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Logout\")));\n  }\n\n}","map":{"version":3,"sources":["/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/chat/menu-app-bar/MenuAppBar.jsx"],"names":["React","AppBar","Toolbar","Typography","IconButton","MenuIcon","AccountCircle","MenuItem","Menu","Badge","Notifications","BellIcon","msgImage","stompClient","MenuAppBar","Component","constructor","props","connect","username","Stomp","require","SockJS","over","onConnected","onError","setState","subscribe","toString","toLowerCase","onMessageReceived","send","JSON","stringify","sender","type","sendMessage","value","bellRing","chatMessage","user","content","payload","message","parse","body","state","privateMessages","push","dateTime","handleOpenNotifications","openNotifications","isPrivateMessage","handleOpenPrivateMessages","handleCloseNotifications","handleClick","event","anchorEl","currentTarget","handleClose","handleLogOut","window","location","reload","render","auth","open","Boolean","background","handleMenu","roomNotification","length","width","height","broadcastMessage"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport './MenuAppBar.scss'\n\nimport Badge from '@material-ui/core/Badge';\nimport Notifications from '../../../NotificationsComponent'\nimport BellIcon from 'react-bell-icon';\nimport msgImage from '../../../msgImage.png';\n\n\n\nvar stompClient = null;\nexport default class MenuAppBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state =\n      {\n        openNotifications: false,\n        anchorEl: null,\n        privateMessages: [],\n        isPrivateMessage: false\n      };\n\n    this.connect()\n  }\n\n  connect = () => {\n\n    if (this.props.username) {\n\n      const Stomp = require('stompjs')\n\n      var SockJS = require('sockjs-client')\n\n      SockJS = new SockJS('/ws')\n\n      stompClient = Stomp.over(SockJS);\n\n      stompClient.connect({}, this.onConnected, this.onError);\n\n      this.setState({\n        username: this.props.username,\n      })\n    }\n  }\n\n  onConnected = () => {\n\n    // Subscribing to the private topic\n    stompClient.subscribe('/user/' + this.props.username.toString().toLowerCase() + '/reply', this.onMessageReceived);\n    // Registering user to server as a private chat user\n    stompClient.send('/app/addPrivateUser', {}, JSON.stringify({ sender: this.props.username, type: 'JOIN' }))\n  }\n\n  sendMessage = (type, value) => {\n\n    this.setState({\n      bellRing: true\n    })\n\n    if (stompClient) {\n      var chatMessage = {\n        sender: this.props.user,\n        content: type === 'TYPING' ? value : value,\n        type: type\n\n      };\n      // send private message\n      stompClient.send('/app/sendPrivateMessage', {}, JSON.stringify(chatMessage));\n\n    }\n  }\n\n  onMessageReceived = (payload) => {\n\n    var message = JSON.parse(payload.body);\n\n    if (message.type === 'CHAT') {\n      this.state.privateMessages.push({\n        message: message.content,\n        sender: message.sender,\n        dateTime: message.dateTime\n      })\n      this.setState({\n        privateMessages: this.state.privateMessages,\n      })\n    }\n  }\n\n  handleOpenNotifications = () => {\n    this.setState({\n      openNotifications: true,\n      isPrivateMessage: false\n    })\n  }\n\n  handleOpenPrivateMessages = () => {\n    this.setState({\n      openNotifications: true,\n      isPrivateMessage: true\n    })\n  }\n\n  handleCloseNotifications = () => {\n    this.setState({\n      openNotifications: false\n    })\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleLogOut = () => {\n    window.location.reload();\n  };\n\n  render() {\n\n    const { auth, anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div >\n        <AppBar position=\"static\" style={{ background: 'black' }}>\n          <Toolbar>\n            <IconButton className=\"\" color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon onClick={this.handleClick} />\n            </IconButton>\n            <Typography variant=\"title\" color=\"inherit\" className=\"\">\n              {this.props.username} <span> </span> <span className=\"status green\"></span>\n            </Typography>\n            {auth && (\n              <IconButton\n                aria-owns={open ? 'menu-appbar' : null}\n                aria-haspopup=\"true\"\n                onClick={this.handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            )}\n          </Toolbar>\n          <div>\n\n            <Badge className=\"badge\" badgeContent={this.props.roomNotification.length} color=\"secondary\" onClick={this.handleOpenNotifications}>\n              <a href=\"#\"> <BellIcon active={this.props.bellRing} animate={this.props.bellRing} color=\"white\" width=\"25px\" /></a>\n            </Badge>\n            <Badge className=\"badgeMessage\" badgeContent={this.state.privateMessages != null ? this.state.privateMessages.length : 0} color=\"secondary\" onClick={this.handleOpenPrivateMessages}>\n              <a href=\"#\"><img src={msgImage} alt=\"Private messages\" className=\"avatar\" style={{ width: '48px', height: '46px' }} /></a>\n            </Badge>\n\n            <Notifications open={this.state.openNotifications} handleClose={this.handleCloseNotifications}\n              notifications={this.props.roomNotification} roomMessages={this.props.broadcastMessage}\n              privateMessages={this.state.privateMessages} isPrivateMessage={this.state.isPrivateMessage} />\n          </div>\n        </AppBar>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          <MenuItem onClick={this.handleClose}>My account</MenuItem>\n          <MenuItem onClick={this.handleClose}>Broadcast </MenuItem>\n          <MenuItem onClick={this.handleClose}>Starred </MenuItem>\n          <MenuItem onClick={this.handleLogOut}>Logout</MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}