{"ast":null,"code":"var _jsxFileName = \"/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/login/Login.jsx\";\nimport React, { Component } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport KakaoLogin from \"react-kakao-login\";\nimport styled from 'styled-components';\nimport { withRouter } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.responseGoogle = res => {\n      console.log('Google Login Success', res);\n      this.setState({\n        id: res.googleId,\n        name: res.profileObj.name,\n        email: res.profileObj.email,\n        provider: 'Google'\n      });\n      this.saveUser();\n      this.doSignUp();\n    };\n\n    this.responseKakao = res => {\n      console.log('Kakao Login Success', res);\n      this.setState({\n        id: res.profile.id,\n        name: res.profile.properties.nickname,\n        email: res.profile.kakao_account.email,\n        provider: 'Kakao'\n      });\n      this.saveUser();\n      this.doSignUp();\n    };\n\n    this.responseFail = err => {\n      console.error('Login Failed', err);\n    };\n\n    this.saveUser = () => {\n      console.log('saveUser() 호출');\n      let user = {\n        userID: this.state.email\n      };\n      console.log('userID => ', user.userID);\n      ApiService.addUser(user).then(res => {\n        let nick = res.data.nickname;\n        this.setState({\n          nickname: res.data.nickname\n        });\n        console.log('res', res);\n        console.log('res.data.nickname => ', res.data.nickname); //console.log('nickname => ', this.state.nickname);\n\n        window.sessionStorage.setItem('nickname', nick);\n        console.log('nickname => ', nick);\n        this.props.history.push('/users'); //라우터를 통해 이동\n      });\n      console.log('saveUser() 완료'); //여기에서 리스트 불러오는걸 해야하나..\n    };\n\n    this.doSignUp = () => {\n      const _this$state = this.state,\n            id = _this$state.id,\n            name = _this$state.name,\n            email = _this$state.email,\n            provider = _this$state.provider;\n      window.sessionStorage.setItem('id', id);\n      window.sessionStorage.setItem('name', name);\n      window.sessionStorage.setItem('email', email);\n      window.sessionStorage.setItem('provider', provider); //window.sessionStorage.setItem('nickname', nickname);\n\n      this.props.onLogin(); //이거 왜 안받아지지\n      //console.log('this.props.onLogin()', this.props.onLogin());\n\n      this.props.history.push('/users');\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      provider: '',\n      nickname: ''\n    };\n  }\n\n  render() {\n    console.log('Login Render()');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(GoogleLogin, {\n      clientId: \"\\uAD6C\\uAE00\\uC544\\uC774\\uB514\",\n      buttonText: \"Google \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\\uD558\\uAE30\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseFail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(KakaoButton, {\n      jsKey: \"0c66144cffc02f5a068f08dd5ec47ffe\",\n      buttonText: \"Kakao \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\\uD558\\uAE30\",\n      onSuccess: this.responseKakao,\n      onFailure: this.responseFail,\n      getProfile: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst KakaoButton = styled(KakaoLogin)`\n  padding: 0;\n  width: 242px;\n  height: 44px;\n  line-height: 44px;\n  color: #783c00;\n  background-color: #F7E600;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n`;\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/chloe/Workspace/React-SpringBoot/Workspace/React/test-react2/src/component/login/Login.jsx"],"names":["React","Component","GoogleLogin","KakaoLogin","styled","withRouter","ApiService","Login","constructor","props","responseGoogle","res","console","log","setState","id","googleId","name","profileObj","email","provider","saveUser","doSignUp","responseKakao","profile","properties","nickname","kakao_account","responseFail","err","error","user","userID","state","addUser","then","nick","data","window","sessionStorage","setItem","history","push","onLogin","render","KakaoButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport KakaoLogin from \"react-kakao-login\";\nimport styled from 'styled-components';\nimport { withRouter } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\n\nclass Login extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      provider: '',\n      nickname: '',\n    }\n  }\n\n  responseGoogle = (res) => {\n    console.log('Google Login Success', res);\n    this.setState({\n      id: res.googleId,\n      name: res.profileObj.name,\n      email: res.profileObj.email,\n      provider: 'Google'\n    });\n    \n    this.saveUser();\n    this.doSignUp();\n  }\n  \n  responseKakao = (res) => {\n    \n    console.log('Kakao Login Success', res);\n    \n    this.setState({\n      id: res.profile.id,\n      name: res.profile.properties.nickname,\n      email: res.profile.kakao_account.email,\n      provider: 'Kakao'\n    });\n\n    this.saveUser();\n    this.doSignUp();\n  }\n\n  responseFail = (err) => {\n    console.error('Login Failed', err);\n  }\n\n  saveUser = () => {\n    console.log('saveUser() 호출');\n    let user = {\n      userID : this.state.email,\n    }\n    console.log('userID => ', user.userID);\n    \n    ApiService.addUser(user).then( res => {\n\n      let nick = res.data.nickname;\n\n      this.setState({\n        nickname: res.data.nickname\n      });\n\n      console.log('res', res);\n      console.log('res.data.nickname => ', res.data.nickname);\n      //console.log('nickname => ', this.state.nickname);\n\n      window.sessionStorage.setItem('nickname', nick);\n      console.log('nickname => ', nick);\n      this.props.history.push('/users'); //라우터를 통해 이동\n    });\n    \n    console.log('saveUser() 완료')\n    //여기에서 리스트 불러오는걸 해야하나..\n  }\n\n  doSignUp = () => {\n    const {id, name, email, provider} = this.state;\n\n    window.sessionStorage.setItem('id', id);\n    window.sessionStorage.setItem('name', name);\n    window.sessionStorage.setItem('email', email);\n    window.sessionStorage.setItem('provider', provider);\n    //window.sessionStorage.setItem('nickname', nickname);\n\n    this.props.onLogin(); //이거 왜 안받아지지\n    //console.log('this.props.onLogin()', this.props.onLogin());\n    this.props.history.push('/users');\n  }\n\n  render(){\n    console.log('Login Render()');\n    return(\n      <div>\n        <GoogleLogin \n          clientId = \"구글아이디\"\n          buttonText = \"Google 계정으로 로그인하기\"\n          onSuccess = {this.responseGoogle}\n          onFailure = {this.responseFail}\n        />\n        <br/><br/>\n        <KakaoButton\n          jsKey = \"0c66144cffc02f5a068f08dd5ec47ffe\"\n          buttonText = \"Kakao 계정으로 로그인하기\"\n          onSuccess = {this.responseKakao}\n          onFailure = {this.responseFail}\n          getProfile = \"true\"\n        />\n      </div>\n    );\n  }\n}\n\nconst KakaoButton = styled(KakaoLogin)`\n  padding: 0;\n  width: 242px;\n  height: 44px;\n  line-height: 44px;\n  color: #783c00;\n  background-color: #F7E600;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n`\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}